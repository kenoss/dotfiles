" Logging for echo, echoerr, echormsg.
javascript << EOS
var vimperatorrc_overwrite_echo_flag;

if (! vimperatorrc_overwrite_echo_flag) {
    vimperatorrc_overwrite_echo_flag = true;
    ['echo', 'echoerr', 'echomsg'].forEach(function(f) {
        let orig = liberator[f];
        liberator[f] = function(str, flags) {
            liberator.log(f + ": " + str, 0);
            return orig(str, flags);
        };
    });
}
EOS

" Colorscheme
colorscheme indigo



"
" Fundamental options
"

set ignorecase
" Completion of `:[tab]open`: location bar entries and Google Seearch Suggestions
set complete=lS
js services.services.autoCompleteSearch.class_="@mozilla.org/autocomplete/search;1?name=unifiedcomplete"

set hintchars="paoeuidhtnsfgcrlmwvz"

set history=1000

" /, ? での検索結果をハイライト
set hlsearch
set incsearch
" リンクの URI をコマンドラインに表示
set showstatuslinks=2

set nextpattern=^次(へ|の|ペ),^続き,\bnext\b,^>$,^(>>|&#187;)$,^(>|&#187;),(>|&#187;)$,\bmore\b
set previouspattern=^前(へ|の|ペ),^戻る,\bprev|previous\b,^<$,^(<<|&#171;)$,^(<|&#171;),(<|&#171;)$



"
" Plugins
"

""" Loading

let g:plugin_loader_roots = "~/.vimperator/vimperator-plugins"
"let g:plugin_loader_plugins = "_libly,feedSomeKeys_3,forcefocuscontent,imekeys,stella,stylish,walk-input"
let g:plugin_loader_plugins = "_libly,feedSomeKeys_3,stella,stylish"


""" imekeys.js
"" Ctrl+Shift+SPC でオン
"let g:ime_activate_xkey='\[Control]\[Shift]\[Alt] '
"" Ctrl+Shift+$   でオフ
"let g:ime_deactivate_xkey='\[Control]\[Shift] '
"" コマンドラインで自動的にオフ(他にinsertおよびcmd,insertを指定可能)
"let g:imeoff='cmd'

"" Mac: commandモードでIMEオフ
style! -name=commandline-ime chrome://* #liberator-commandline-command input {ime-mode: inactive;}



"
" Key bindings {{{
"

" Reload this config
" nnoremap <M-r> :source ~/.vimperatorrc<CR>
nnoremap <C-2> :source ~/.vimperatorrc<CR>

" Leader {{{

" To Enable map <Space>
" See https://github.com/vimperator/vimperator-labs/issues/10
js <<EOS
var vimperatorrc_admit_space_as_leader_flag;

if (! vimperatorrc_admit_space_as_leader_flag) {
    vimperatorrc_admit_space_as_leader_flag = true;
    window.addEventListener('keypress', function (event) {
        var code = event.charCode;
        if (   (liberator.mode === modes.INSERT && modes.extended === modes.MENU)
            || (liberator.mode === modes.NORMAL && code === 32)
            || (liberator.mode === modes.COMMAND_LINE && code !== 32) ) {
            var map = mappings.get(liberator.mode, events.toString(event));
            if (map) {
                event.preventDefault();
                event.stopPropagation();
                map.execute();
            }
        }
    }, false);
}
EOS

map <Space> <Leader>

" }}}


" Command
nnoremap ; :
nnoremap : ;

" Move -- right hand
nnoremap n gt
nnoremap d gT
nnoremap h <C-u>
nnoremap t <C-d>
nnoremap H <PageUp>
nnoremap T <PageDown>
" nnoremap m <C-u>
" nnoremap w <C-d>

" Move -- left hand
nnoremap i gt
nnoremap o gT
nnoremap e <C-u>
nnoremap u <C-d>

nnoremap j :undo<CR>
nnoremap k :tabclose -s lastactive<CR>

" Navigation
nnoremap , :back<CR>
nnoremap . :forward<CR>
noremap < [[
noremap > ]]
" map r [
" map l ]

nnoremap rr [[
nnoremap rf [f
nnoremap ll ]]
nnoremap lf ]f


" Search
nnoremap <C-.> n
nnoremap <C-,> N

" Open page
nnoremap c :tabopen<Space>
nnoremap C :open<Space>
nnoremap <Leader>c :tabopen google<Space>
nnoremap <Leader>C :open google<Space>

" Reload
nnoremap <C-r> :reload<CR>

" Open url in clipboard in new tab by p
nnoremap p P
nnoremap P p
nnoremap gp gP
nnoremap gP <Nop>



""" Command line mode {{{

" Select
cnoremap <C-n>  <TAB>
cnoremap <C-p>  <S-TAB>
cnoremap <Down> <TAB>
cnoremap <Up>   <S-TAB>

" Command history
cnoremap <C-r> <PageUp>
cnoremap <C-s> <PageDown>

" }}}



nnoremap <Leader>b :buffer<Space>
nnoremap <Leader>B :buffer #<CR>
nnoremap sb :buffer<Space>
nnoremap sB <C-@>



""" Plugin {{{

nnoremap S :stylish turnall<CR>

"" noremap / :treestyle expand<CR>
"" noremap [ :treestyle expandAll<CR>
"" noremap ] :treestyle expandAll!<CR>

" nnoremap s <Nop>
" nnoremap ss :treestyle expand<CR>
" nnoremap s[ :treestyle expandAll<CR>
" nnoremap s] :treestyle expandAll!<CR>
" nnoremap sa :treestyle attach<Space>
" nnoremap sA :treestyle attach!<Space>
" nnoremap sd :treestyle detach<Space>
" nnoremap sD :treestyle detach!<Space>
" nnoremap s, :treestyle promote<CR>
" nnoremap s. :treestyle demote<CR>



" }}}




" Local mapping

javascript << EOS
function addLocalMappings(buffer, maps) {
    maps.forEach(function (map) {
        let [cmd, action, extra] = map;
        let actionFunc = action;
        extra || (extra = {});

        if (typeof action == "string") {
            if (action.charAt(0) == ':') {
                actionFunc = extra.open ? function () commandline.open("", action, modes.EX)
                    : function () liberator.execute(action);
            } else {
                actionFunc = function () events.feedkeys(action, extra.noremap, true);
            }
        }
        extra.matchingUrls = buffer;
        mappings.addUserMap(
            [modes.NORMAL],
            [cmd],
            "Local mapping for " + buffer,
            actionFunc,
            extra
        );
    });
}

addLocalMappings(
    /^(http:\/\/(es|www).nicovideo.jp\/watch|http:\/\/(jp|www)\.youtube\.com\/watch)/,
    [
        ['m', ':stplay',       ],
        ['w', ':stfullscreen', ],
        ['b', ':stseek! -10',  ],
        ['v', ':stseek! 10',   ],
        ['B', ':stseek! -30',  ],
        ['V', ':stseek! 30',   ],
        ['M', ':stmute',       ],
        ['+', ':stvolume!  10',],
        ['-', ':stvolume! -10',],
        ['x', ':stcomment',    ],
        ['X', ':stfetch',      ],
    ]
);
EOS

" }}}







js <<EOS
var treeFoldExpand = function(tab) {
    gBrowser.treeStyleTab.collapseExpandSubtree(tab, false);
};

var treeFoldCollapse = function(tab) {
    gBrowser.treeStyleTab.collapseExpandSubtree(tab, true);
};

var treeFoldToggle = function(tab) {
    gBrowser.treeStyleTab.collapseExpandSubtree(tab, TreeStyleTabService.isSubtreeCollapsed(tab));
};

var treeFoldCollapseUp = function(tab) {
    treeFoldCollapse(TreeStyleTabService.getParentTab(tab));
};

var treeFoldExpandRoot = function(tab) {
    treeFoldExpand(TreeStyleTabService.getRootTab(tab));
};

var treeFoldCollapseRoot = function(tab) {
    treeFoldCollapse(TreeStyleTabService.getRootTab(tab));
};

var treeFoldExpandAll = function() {
    TreeStyleTabService.rootTabs.forEach(treeFoldExpand);
};

var treeFoldCollapseAll = function() {
    TreeStyleTabService.rootTabs.forEach(treeFoldCollapse);
};

var treeMoveToNextSiblingTab = function(count) {
    count = (+count) ? +count : 1;
    var tab = gBrowser.selectedTab;
    var nextTab = tab;
    while (count > 0) {
        count -= 1;
        nextTab = treeGetNextSiblingTab(nextTab);
    }
    gBrowser.selectedTab = nextTab;
};

var treeMoveToPreviousSiblingTab = function(count) {
    count = (+count) ? +count : 1;
    var tab = gBrowser.selectedTab;
    var prevTab = tab;
    while (count > 0) {
        count -= 1;
        prevTab = treeGetPreviousSiblingTab(prevTab);
    }
    gBrowser.selectedTab = prevTab;
};

var treeGetNextSiblingTab = function(tab) {
    var nextTab = TreeStyleTabService.getNextSiblingTab(tab);
    if (nextTab) {
        return nextTab;
    } else {
        var parentTab = TreeStyleTabService.getParentTab(tab);
        if (parentTab) {
            return treeGetNextSiblingTab(parentTab);
        } else {
            return tab;
        }
    }
};

var treeGetPreviousSiblingTab = function(tab) {
    var prevTab = TreeStyleTabService.getPreviousSiblingTab(tab);
    if (prevTab) {
        return prevTab;
    } else {
        var parentTab = TreeStyleTabService.getParentTab(tab);
        if (parentTab) {
            return treeGetPreviousSiblingTab(parentTab);
        } else {
            return tab;
        }
    }
};

var treeMoveToParentTab = function(count) {
    count = (+count) ? +count : 1;
    var tab = gBrowser.selectedTab;
    for ( ; count > 0; count--) {
        tab = TreeStyleTabService.getParentTab(tab);
    }
    gBrowser.selectedTab = tab;
};

var treeMoveToNextSiblingTabCycle = function(count, gb) {
    count = (+count) ? +count : 1;
//    liberator.echo('selected tab is : ' + gBrowser.selectedTab);
//    liberator.echo('gBrowser is : ' + gBrowser);
//    liberator.echo('count is : ' + count);
    gBrowser.selectedTab = treeGetNextSiblingTabCycle(gBrowser.selectedTab, count);
};

var treeMoveToPreviousSiblingTabCycle = function(count) {
    count = (+count) ? -count : -1;
    gBrowser.selectedTab = treeGetNextSiblingTabCycle(gBrowser.selectedTab, count);
};

var treeGetNextSiblingTabCycle = function(tab, count) {
    count = (+count) ? +count : 1;
    var TSTS = TreeStyleTabService;
    var parent = TSTS.getParentTab(tab);
    var siblings = parent && parent.parentNode ? TSTS.getChildTabs(parent) : TSTS.visibleRootTabs ;
    var index;
    siblings.forEach(function(t, i) { if (t == tab) index = i; });
    return siblings[nonNegativeModulo(index + count, siblings.length)];
};

var nonNegativeModulo = function(a, b) {
    b = (b >= 0) ? b : -b;
    return ((a % b) + b) % b;
};

var treeCloseChildrenTabs = function(tab) {
    var children = TreeStyleTabService.getDescendantTabs(tab);
    children.forEach(function(t) {
        tabs.remove(t);
    });
};

var treeCloseCurrentTreeTabs = function(tab) {
    var rootTab = TreeStyleTabService.getRootTab(gBrowser.selectedTab);
    gBrowser.selectedTab = rootTab;
    treeCloseChildrenTabs(rootTab);
    tab.remove(rootTab);
};
EOS


nnoremap <C-t> :<C-u>js TreeStyleTabService.readyToOpenChildTab(gBrowser.selectedTab, false)<CR>:tabnew<CR>:open google<Space>
nnoremap <C-S-t> :<C-u>js TreeStyleTabService.readyToOpenChildTab(gBrowser.selectedTab, false)<CR>:tabduplicate<CR>

nnoremap za :<C-u>js treeFoldToggle(gBrowser.selectedTab)<CR>
nnoremap zz :<C-u>js treeFoldToggle(gBrowser.selectedTab)<CR>
nnoremap zo :<C-u>js treeFoldExpand(gBrowser.selectedTab)<CR>
nnoremap zc :<C-u>js treeFoldCollapse(gBrowser.selectedTab)<CR>

nnoremap zr <Nop>
nnoremap zm <Nop>

nnoremap zO :<C-u>js treeFoldExpandRoot(gBrowser.selectedTab)<CR>
nnoremap zC :<C-u>js treeFoldCollapseRoot(gBrowser.selectedTab)<CR>

nnoremap zR :<C-u>js treeFoldExpandAll()<CR>
nnoremap zM :<C-u>js treeFoldCollapseAll()<CR>

nnoremap K :<C-u>js treeCloseChildrenTabs(gBrowser.selectedTab)<CR>

nnoremap D :<C-u>js treeMoveToParentTab()<CR>
" nnoremap H :<C-u>js treeMoveToPreviousSiblingTabCycle()<CR>
" nnoremap T :<C-u>js treeMoveToNextSiblingTabCycle()<CR>
